1.简单工厂：对已知的类进行管理生产 扩展困难
举例：学校只有 语文 数学 英语 体育老师
建立简单工厂进行封装实例就行 但是如果学校要新招 美术老师 那就只有修改程序

2.工厂方法：扩展方便 继承基类 实现工厂方法接口即可
举例：学校现在有 语文 数学 英语 体育老师 以后可能还会有 音乐 美术等老师  如果学校还需要招很多的其他科目的老师 就会同时新建同样多的工厂

3.抽象工厂方法：将所有子类公共方法抽象出来 子类继承各自实现 对创建产品家族实用 如果这个家族需要扩展新功能将会很困难
举例：学校现在的所有老师都必须要会 写总结 会使用电脑  之后来的老师也必须要会
如果现在学校要求所有的老师还必须要会打篮球 那所有的老师还需要重新学习（所有的类都要实现打篮球这个方法） 老师表示一脸懵逼